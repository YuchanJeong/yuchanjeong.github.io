<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Yuchan&#39;s hello world!</title>
    <link>https://yuchanjeong.github.io/tags/react/</link>
    <description>Recent content in React on Yuchan&#39;s hello world!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2021 Yuchan&#39;s hello world!</copyright>
    <lastBuildDate>Mon, 14 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://yuchanjeong.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>다국어 처리 (react-i18next)</title>
      <link>https://yuchanjeong.github.io/posts/work/5/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/work/5/</guid>
      <description>배경 #새로 진행하고 있는 B2B 프로젝트에 글로벌 진출 기회가 생겨서 다국어 처리를 할 필요가 생겼다.</description>
    </item>
    <item>
      <title>[프로젝트 초기 설정] Axios Instance &amp; React Query</title>
      <link>https://yuchanjeong.github.io/posts/work/4/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/work/4/</guid>
      <description>Axios Instance #base url 설정, 헤더에 액세스 토큰 포함, 액세스 토큰 만료 시 재발급 그리고 리프레시 토큰 만료 시 로그아웃을 axiosInstance를 통해 공통 설정으로 처리했다.</description>
    </item>
    <item>
      <title>[프로젝트 초기 설정] 코드 스플리팅 &amp; SASS</title>
      <link>https://yuchanjeong.github.io/posts/work/3/</link>
      <pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/work/3/</guid>
      <description>코드 스플리팅 #리액트에서 활용 가능한 여러 방식의 코드 스플리팅이 있지만 우선 회사의 다른 프로젝트에서 사용하고 있는 loadable component를 활용한 페이지(라우팅) 기반의 코드 스플리팅만 적용 했다.</description>
    </item>
    <item>
      <title>[프로젝트 초기 설정] 협업 준비</title>
      <link>https://yuchanjeong.github.io/posts/work/2/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/work/2/</guid>
      <description>배경 #다른 팀원들이 기존 업무로 바빴기 때문에 신규 B2B 프로젝트에 나만 우선 투입되었다.</description>
    </item>
    <item>
      <title>평균 별점 (소수점 반영)</title>
      <link>https://yuchanjeong.github.io/posts/work/1/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/work/1/</guid>
      <description>배경 #제품 상세페이지의 제품 이미지 바로 아래에 해당 제품의 평균 별점이 보이면 좋겠다는 의견이 나와서 이를 반영하기로 했다.</description>
    </item>
    <item>
      <title>[React] React v18.0</title>
      <link>https://yuchanjeong.github.io/posts/studies/react/react/v18.0/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/studies/react/react/v18.0/</guid>
      <description>React v18.</description>
    </item>
    <item>
      <title>BC-11w-1 / [React] 상태 관리(1)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-11w-1/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-11w-1/</guid>
      <description>Today I learned #&#xD;상태 관리 # 상태 변경이 일어나는 곳과 상태 변경의 영향을 받는 곳 Side Effect 함수(또는 컴포넌트)의 입력 외에도 함수의 결과에 영향을 미치는 요인 Ex.</description>
    </item>
    <item>
      <title>BC-10w-5 / [React] 컴포넌트 디자인-실습(2)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-10w-5/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-10w-5/</guid>
      <description>Today I learned #Sprint - React Custom Component #Autocomplete #import { useState, useEffect } from &amp;#34;react&amp;#34;; import styled from &amp;#34;styled-components&amp;#34;; const deselectedOptions = [ &amp;#34;rustic&amp;#34;, &amp;#34;antique&amp;#34;, &amp;#34;vinyl&amp;#34;, &amp;#34;vintage&amp;#34;, &amp;#34;refurbished&amp;#34;, &amp;#34;신품&amp;#34;, &amp;#34;빈티지&amp;#34;, &amp;#34;중고A급&amp;#34;, &amp;#34;중고B급&amp;#34;, &amp;#34;골동품&amp;#34;, ]; const boxShadow = &amp;#34;0 4px 6px rgb(32 33 36 / 28%)&amp;#34;; const activeBorderRadius = &amp;#34;1rem 1rem 0 0&amp;#34;; const inactiveBorderRadius = &amp;#34;1rem 1rem 1rem 1rem&amp;#34;; export const InputContainer = styled.</description>
    </item>
    <item>
      <title>BC-10w-4 / [React] 컴포넌트 디자인-실습(1)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-10w-4/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-10w-4/</guid>
      <description>Today I learned #&#xD;Sprint - React Custom Component # 빌드 컴포넌트 📚 스토리북(Storybook) UI 컴포넌트 개발과 자동으로 문서를 생성할 때 사용 ⚛️ 리액트(React) 선언 중심 컴포넌트 UI(create-react-app)를 사용 💅 스타일 컴포넌트(Styled-components) 컴포넌트 단위의 스타일링에 사용.</description>
    </item>
    <item>
      <title>BC-10w-3 / [React] 컴포넌트 디자인-기본</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-10w-3/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-10w-3/</guid>
      <description>Today I learned #&#xD;컴포넌트 단위로 개발하기 #Component Driven Development(CDD) # 컴포넌트 생성 -&amp;gt; 컴포넌트 결합 -&amp;gt; 페이지 조립 예시 BBC 컴포넌트 UI 개발을 위한 Storybook # Component Explorer (컴포넌트 탐색기)</description>
    </item>
    <item>
      <title>BC-9w-4 / {FC} React(8) Deploy React App</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-9w-4/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-9w-4/</guid>
      <description>Today I learned #&#xD;+ React with FastCampus(8) Deploy React App #SPA 프로젝트 배포 이해하기 # npm run build long term caching techniques SPA Deploy 특징 모든 요청을 서버에 하고 받아오는 형태가 아님 라우팅 경로에 상관없이 리액트 앱을 받아 실행 라우팅은 받아온 리액트 앱을 실행 후 적용 static 파일을 제외한 모든 요청을 index.</description>
    </item>
    <item>
      <title>BC-9w-3 / [React] 데이터 흐름의 이해와 비동기 처리</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-9w-3/</link>
      <pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-9w-3/</guid>
      <description>Today I learned #&#xD;React 데이터 흐름 # 데이터 흐름</description>
    </item>
    <item>
      <title>BC-6w-2 / HA-React</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-6w-2/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-6w-2/</guid>
      <description>Today I learned #Section Review #DOM #&amp;lt;!</description>
    </item>
    <item>
      <title>BC-6w-1 / {FC} React(7)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-6w-1/</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-6w-1/</guid>
      <description>Today I learned #+ React with FastCampus(7) Advanced #Optimizing Performance # 필요할 때만 랜더 한다.</description>
    </item>
    <item>
      <title>BC-5w-추석(3) / 5주 차 정리 &#43; {FC} React(6)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-5w-3/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-5w-3/</guid>
      <description>5주 차 정리(추석 연휴) # 19일은 외가, 20일은 산소, 21일은 친가를 방문했다.</description>
    </item>
    <item>
      <title>BC-5w-추석(2) / {FC} React(5)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-5w-2/</link>
      <pubDate>Sat, 25 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-5w-2/</guid>
      <description>React with FastCampus(5) 실전 활용 #HOC(Higher-Order Component) # HOC = function(컴포넌트) { return 새로운 컴포넌트 } Ex.</description>
    </item>
    <item>
      <title>BC-5w-추석(1) / {FC} React(4)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-5w-1/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-5w-1/</guid>
      <description>React with FastCampus(4) Style #Style Loaders # loader in webpack CSS, SASS # 스타일이 전역적으로 순서만 다르게 들어가서,</description>
    </item>
    <item>
      <title>BC-4w-6 / 4주 차 정리 &#43; {FC} React(3)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-6/</link>
      <pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-6/</guid>
      <description>4주 차 정리 # 월요일에는 DOM의 이벤트에 대해 배우고, 혼자서 TypeScript를 학습했다.</description>
    </item>
    <item>
      <title>BC-4w-5 / [React] props, state</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-5/</link>
      <pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-5/</guid>
      <description>Today I learned #React props &amp;amp; state # props</description>
    </item>
    <item>
      <title>BC-4w-4 / [React] Router &#43; {FC} React(2)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-4/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-4/</guid>
      <description>Today I learned #SPA # 전통적인 웹사이트는 페이지 전체를 로딩 SPA는 Menu와 Footer와 같이 페이지 전환 전후에 중복되는 부분은 새로 불러오지 않음 SPA는 무거운 JS 파일을 기다리는 시간으로 인해 첫 화면의 로딩 시간이 길어짐 SPA는 검색 엔진 최적화(SEO)가 좋지 않음(구글 등이 HTML을 기반으로 자료 수집) React Router # npm i react-router-dom 라우팅(Routing) 경로(주소)에 따라 다른 뷰를 보여줌 &amp;lt;BrowserRouter&amp;gt; &amp;lt;App /&amp;gt;을 감쌈 &amp;lt;Switch&amp;gt; Route를 감쌈 &amp;lt;Route&amp;gt; exact 속성은 정확한 주소 매칭 path 속성에 경로 &amp;lt;Link&amp;gt; to 속성에 path의 경로 Ex.</description>
    </item>
    <item>
      <title>BC-4w-3 / [React] Intro &#43; {FC} React(1)</title>
      <link>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-3/</link>
      <pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/posts/bootcamp/bc-4w-3/</guid>
      <description>Today I learned #React Intro # React</description>
    </item>
    <item>
      <title>React</title>
      <link>https://yuchanjeong.github.io/what-i-learned/javascript/react/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yuchanjeong.github.io/what-i-learned/javascript/react/</guid>
      <description>React v18.</description>
    </item>
  </channel>
</rss>
